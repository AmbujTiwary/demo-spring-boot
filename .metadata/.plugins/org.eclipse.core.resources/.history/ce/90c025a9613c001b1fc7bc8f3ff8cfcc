package com.example.demo.controllers;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.TimeUnit;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.scheduling.annotation.Async;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.models.NumberGenerator;

@RestController
@RequestMapping("api/")
public class GeneratorController {
	
	Map<UUID, NumberGenerator> listGenerator = new HashMap<UUID, NumberGenerator>();
	
	//Receives login info from UI and validates
	@Async
	@PostMapping(path= "generate", consumes = "application/json", produces = "application/json")
	@ResponseStatus(HttpStatus.OK) 
	public UUID generateNumber(@RequestBody NumberGenerator gen) {
		System.out.println("goal " + gen.getGoal() + "pwd " + gen.getStep());
		
		
		UUID uid =java.util.UUID.randomUUID();
		gen.setId(uid);
		
		int goal = Integer.valueOf(gen.getGoal());
		int step = Integer.valueOf(gen.getStep());
		
		listGenerator.put(uid, gen);
		getGeneratedNumber(goal, step);
		return gen.getId();
	}
	
	@Async
	private CompletableFuture<List<Integer>> getGeneratedNumber(int goal, int step) {
		int i =0;
		List<Integer> list = new ArrayList<Integer>();
		while(i < goal)
		{
			try {
				System.out.println("sleeping for 5 sec");
				TimeUnit.SECONDS.sleep(5);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			list.add(i);
			i += step;
		}
		return CompletableFuture.completedFuture(list);
	}

	/*	@GetMapping(value="tasks/{id}/status")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable(value = "id") Long employeeId)
	{
		
	}
	*/
	@GetMapping(value="tasks/{id}/status")
    public String index() {

        return "This is Home page";
    }

}
